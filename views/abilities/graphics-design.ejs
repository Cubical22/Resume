<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>graphics design</title>
    <style>
        :root {
            --bright-cyan: rgb(54, 118, 238);
            --dark-cyan: rgb(46, 99, 197);
            --darker-cyan: rgb(34, 75, 151);
        }
        
        * {
            margin: 0;
            padding: 0;
            font-family: Arial, Helvetica, sans-serif;
            box-sizing: border-box;
        }

        h1 {
            direction: rtl;
        }

        body {
            background-color: rgb(12, 12, 12);
        }

        header {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between;
            height: fit-content;
            padding: 5px 10px;
            background-color: rgba(0, 0, 0, 0.658);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.658);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
        }

        .title {
            color: white;
            text-decoration: underline;
            text-decoration-color: var(--bright-cyan);
        }

        .back-button {
            background-color: white;
            padding: 5px 10px;
            border-radius: 50vh;
            font-size: 15px;
            text-decoration: none;
            color: var(--bright-cyan);
            transition: transform ease-in-out .14s;
        }

        .back-button:hover {
            transform: scale(110%);
        }

        .bg {
            width: 100vw;
            height: 100vh;
            position: fixed;
            top: 0;
            z-index: -1;
        }

        .main-holder {
            width: 100%;
            height: fit-content;
            margin-top: 50px;
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            justify-content: space-evenly;
            padding: 10px;
            row-gap: 10px;
        }

        .info-section {
            height: fit-content;
            background-color: rgba(0, 0, 0, 0.637);
            border: 1px solid var(--bright-cyan);
            transition: box-shadow ease-in-out .14s;
            cursor: default;
            width: fit-content;
            min-width: 250px;
            max-width: 600px;
            width: 60vw;
        }

        .info-section:hover {
            box-shadow: 0 0 10px rgba(54, 118, 238, 0.534);
        }

        .info-section .section-title {
            width: 100%;
            text-align: end;
            padding: 5px;
            background-color: var(--bright-cyan);
            font-size: 17px;
        }

        .info-section .section-info {
            padding: 10px;
            color: white;
            font-size: 1.2em;
            direction: rtl;
        }
    </style>
</head>
<body>
    <canvas class="bg"></canvas>
    <header>
        <a href="/" class="back-button">بازگشت</a>
        <h1 class="title">طراحی گرافیک</h1>
    </header>
    <div class="main-holder"></div>

    <!-- this script handles adding the info sections based on the array in the script -->
    <script>
        const list_element = document.querySelector(".main-holder");
        
        class Section {
            constructor(title, info) {
                this.title = title;
                this.info = info;
            }
        }

        const sections = [
            new Section(
                "منظور از طراحی گرافیک چیست؟",
                "طراحی گرافیک مهارتی وسیع می باشد که اغلب خارج از قالب وب صورت میگیرد و سپس در وبسایت به آن چیدمان داده میشود. استفاده از برنامه هایی همچون illustrator و photoshop  و گاهی premier pro و after affects, و برای طراحی سه بعدی از blender در این زمینه واجب است. با توجه به نیاز های وبسایت می توان از هر یک از برنامه های ذکر شده استفاده کرد."
            ),
            new Section(
                "نقش مشتری در این زمینه چیست؟",
                "مشتری در این زمینه از دو نقش برخوردار می باشد. مشتری می تواند با بیان خواسته های خود از وب, مابقی کار را از جمله استفاده از برنامه های گوناگون به دست سازنده بسپارد, یا مشتری می تواند با اراعه ی طراحی های از قبل ساخته شده یا با معرفی یک یا چند فرد با مهارت در این زمینه ها, سرعت کار را بالا ببرد."
            ),
            new Section(
                "تاثیر این بخش بر هزینه چطور می باشد؟",
                "این بخش تاثیر معینی بر هزینه ها ندارد, به طوری که تاثیر آن متغیر است و به صورت توافقی بین مشتری و سازنده تعیین می گردد. شما با مشاهده ی انواع طراحی ها در سایت های گوناگون, می توانید به یک میانگین هزینه پی ببرید."
            ),
            new Section(
                "تاثیر این زمینه بر سایت چیست؟",
                "هر تغییراتی در سایت که باعث زیبا و جذاب تر شدن آن شود, نظر بازدیدکنندگان سایت را بیشتر به خود جذب می کند و تاثیرات مثبت بسزایی روی وبسایت می گزارد."
            )
        ];

        sections.forEach(section => {
            const div = document.createElement("div");
            div.classList.add("info-section");
            div.innerHTML = `
                <h1 class="section-title">${section.title}</h1>
                <p class="section-info">${section.info}</p>
            `;
            list_element.appendChild(div);
        });
    </script>

    <!-- this script handles the canvas in teh bg-->
    <script>
        const canvas = document.querySelector(".bg");
        const c = canvas.getContext("2d");

        function resizing() {
            canvas.width = innerWidth;
            canvas.height = innerHeight;
        } resizing();

        window.addEventListener("resize", resizing);

        const speed_x = 1;
        const value_used = 5;

        class Particle {
            constructor(x,y,sin_offset) {
                this.x = x;
                this.y = y;
                this.sin_offset = sin_offset;
            }

            update(c) {
                this.x += speed_x*(Math.random()*value_used + 1);
                this.y += Math.sin((this.x + this.sin_offset)/value_used/2)*value_used;

                if (this.x > innerWidth) {
                    this.x = 0;
                }

                this.draw(c);
            }

            draw(c) {
                c.beginPath();
                c.fillStyle = "rgb(54, 118, 238)";
                c.arc(this.x, this.y, 3, 0 , Math.PI*2, false);
                c.fill();
            }
        }
        const particles = [];
        const particle_count = 20;
        
        function init() {
            particles.splice(0,particles.length);
            for (let i = 0; i < particle_count; i++) {
                const x = Math.random() * canvas.width;
                const y = Math.random() * canvas.height;
                particles.push(new Particle(x,y,Math.random()*200));
            }
        } init();

        function animate() {
            requestAnimationFrame(animate);

            for (let i = 0; i < particles.length; i++) {
                particles[i].update(c);
            }
        
            c.fillStyle = "rgba(0,0,0,0.2)";
            c.fillRect(0,0,canvas.width, canvas.height);
        } animate();
    </script>
</body>
</html>